import config from '../../config.js';

const stylizedChars = {
  a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
  h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
  o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
  v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©',
  '0': '‚ìø', '1': '‚ûä', '2': '‚ûã', '3': '‚ûå', '4': '‚ûç',
  '5': '‚ûé', '6': '‚ûè', '7': '‚ûê', '8': '‚ûë', '9': '‚ûí'
};

const chr = async (m, sock) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix)
    ? m.body.slice(prefix.length).split(' ')[0].toLowerCase()
    : '';

  if (["chr", "creact"].includes(cmd)) {
    const bot = sock.decodeJid(sock.user.id);
    const dev = "923253617422@s.whatsapp.net";
    const owner = config.OWNER_NUMBER + '@s.whatsapp.net';
    const isCreator = [bot, dev, owner].includes(m.sender);

    if (!isCreator) return m.reply("‚ùå Owner only command");

    const args = m.body.trim().split(' ').slice(1);
    if (args.length < 2) {
      return m.reply(`Usage:\n${prefix}chr https://whatsapp.com/channel/1234567890 your_text_here`);
    }

    const [link, ...textParts] = args;
    const inputText = textParts.join(' ').toLowerCase();

    if (!link.includes("whatsapp.com/channel/")) {
      return m.reply("‚ùå Invalid channel link format.");
    }

    const channelId = link.split('/')[4];
    const messageId = link.split('/')[5];
    if (!channelId || !messageId) {
      return m.reply("‚ùå Invalid link - missing channel ID or message ID.");
    }

    const stylized = inputText
      .split('')
      .map(char => (char === ' ' ? '‚Äï' : stylizedChars[char] || char))
      .join('');

    await m.React('üî§');

    try {
      const channelMeta = await sock.newsletterMetadata("invite", channelId);
      await sock.newsletterReactMessage(channelMeta.id, messageId, stylized);

      await sock.sendMessage(
        m.from,
        {
          text:
`‚ï≠‚îÅ‚îÅ‚îÅ„Äî *Sarkar-MD* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚ñ∏ *Success!* Reaction sent
‚îÉ‚ñ∏ *Channel:* ${channelMeta.name}
‚îÉ‚ñ∏ *Reaction:* ${stylized}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *¬© P·¥è·¥°·¥á Ä·¥á·¥Ö B è Sarkar-MD*`,
          contextInfo: {
            mentionedJid: [m.sender],
            isForwarded: true,
            forwardingScore: 999,
            externalAdReply: {
              title: "Sarkar-MD",
              body: "Channel Message Reaction",
              thumbnailUrl: 'https://i.imgur.com/ZRDeoRi.jpeg',
              sourceUrl: 'https://github.com/YourRepo/YourBot',
              mediaType: 1,
              renderLargerThumbnail: true,
            },
          },
        },
        { quoted: m }
      );

      await m.React('‚úÖ');
    } catch (err) {
      console.error(err);
      return m.reply(`‚ùé Error: ${err.message || "Failed to send reaction"}`);
    }
  }
};

export default chr;
