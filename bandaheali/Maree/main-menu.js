import moment from 'moment-timezone';
import os from 'os';
import config from '../config.cjs';

// Time greeting function
const getGreeting = () => {
  const time = moment().tz("Asia/Colombo").format("HH:mm:ss");
  if (time < "05:00:00") return `Good Morning üåÑ`;
  if (time < "11:00:00") return `Good Morning üåÑ`;
  if (time < "15:00:00") return `Good Afternoon üåÖ`;
  if (time < "18:00:00") return `Good Evening üåÉ`;
  if (time < "19:00:00") return `Good Evening üåÉ`;
  return `Good Night üåå`;
};

const menu = async (m, Matrix) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(' ')[0].toLowerCase() : '';
  const mode = config.MODE === 'public' ? 'public' : 'private';
  const botName = config.BOT_NAME || '*_SARKAR-MD_*';
  const caption = config.CAPTION || '*_Powered By Sarkar-MD_*';
  const menuImage = config.ALIVE_IMG || 'https://files.catbox.moe/htnkaq.jpg';

  const validCommands = ['list', 'help', 'menu'];

  if (!validCommands.includes(cmd)) return;

  try {
    // Calculate uptime
    const uptime = process.uptime();
    const day = Math.floor(uptime / (24 * 3600));
    const hours = Math.floor((uptime % (24 * 3600)) / 3600);
    const minutes = Math.floor((uptime % 3600) / 60);
    const seconds = Math.floor(uptime % 60);

    const pushwish = getGreeting();

    const mainMenu = `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî *${botName}* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ Owner : *${config.OWNER_NAME}*
‚îÉ‚òÖ‚îÇ User : *${m.pushName}*
‚îÉ‚òÖ‚îÇ Baileys : *Multi Device*
‚îÉ‚òÖ‚îÇ Type : *NodeJs*
‚îÉ‚òÖ‚îÇ Mode : *${mode}*
‚îÉ‚òÖ‚îÇ Platform : *${os.platform()}*
‚îÉ‚òÖ‚îÇ Prefix : [${prefix}]
‚îÉ‚òÖ‚îÇ Version : *3.1.0*
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑

> ${pushwish} *${m.pushName}*!

‚ï≠‚îÅ‚îÅ„Äî *Menu List* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ 1. Download Menu      
‚îÉ‚óà‚îÉ‚Ä¢ 2. Converter Menu        
‚îÉ‚óà‚îÉ‚Ä¢ 3. AI Menu  
‚îÉ‚óà‚îÉ‚Ä¢ 4. Tools Menu  
‚îÉ‚óà‚îÉ‚Ä¢ 5. Group Menu 
‚îÉ‚óà‚îÉ‚Ä¢ 6. Search Menu   
‚îÉ‚óà‚îÉ‚Ä¢ 7. Main Menu
‚îÉ‚óà‚îÉ‚Ä¢ 8. Owner Menu 
‚îÉ‚óà‚îÉ‚Ä¢ 9. Stalk Menu     
‚îÉ‚óà‚îÉ‚Ä¢ update
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> *Reply with the number (1-9)*`;

    // Send main menu
    const sentMsg = await Matrix.sendMessage(m.from, {
      image: { url: menuImage },
      caption: mainMenu,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
          newsletterJid: config.NEWSLETTER_JID || '120363315182578784@newsletter',
          newsletterName: config.NEWSLETTER_NAME || "SARKAR-MD",
          serverMessageId: 143
        }
      }
    }, { quoted: m });

    // Send audio if configured
    if (config.MENU_AUDIO_URL) {
      await Matrix.sendMessage(m.from, {
        audio: { url: config.MENU_AUDIO_URL },
        mimetype: 'audio/mp4',
        ptt: true
      }, { quoted: m });
    }

    // Menu response handler
    const handleMenuResponse = async (event) => {
      const receivedMsg = event.messages[0];
      if (!receivedMsg?.message?.extendedTextMessage || 
          receivedMsg.key.remoteJid !== m.from ||
          receivedMsg.message.extendedTextMessage.contextInfo?.stanzaId !== sentMsg.key.id) {
        return;
      }

      const choice = receivedMsg.message.extendedTextMessage.text.trim();
      const menuData = {
        "1": {
          title: "Download Menu",
          content: `
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ apk
‚îÉ‚óà‚îÉ‚Ä¢ facebook
‚îÉ‚óà‚îÉ‚Ä¢ mediafire
‚îÉ‚óà‚îÉ‚Ä¢ pinterestdl
‚îÉ‚óà‚îÉ‚Ä¢ gitclone
‚îÉ‚óà‚îÉ‚Ä¢ gdrive
‚îÉ‚óà‚îÉ‚Ä¢ insta
‚îÉ‚óà‚îÉ‚Ä¢ ytmp3
‚îÉ‚óà‚îÉ‚Ä¢ ytmp4
‚îÉ‚óà‚îÉ‚Ä¢ play
‚îÉ‚óà‚îÉ‚Ä¢ song
‚îÉ‚óà‚îÉ‚Ä¢ video
‚îÉ‚óà‚îÉ‚Ä¢ ytmp3doc
‚îÉ‚óà‚îÉ‚Ä¢ ytmp4doc
‚îÉ‚óà‚îÉ‚Ä¢ tiktok
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑`
        },
        // Add other menu options here...
        "default": {
          title: "Invalid Choice",
          content: "*Invalid Reply Please Reply With A Number Between 1 to 9*"
        }
      };

      const selectedMenu = menuData[choice] || menuData.default;
      const response = `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî *${botName} - ${selectedMenu.title}* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ‚Ä¢ Owner : *${config.OWNER_NAME}*
‚îÉ‚òÖ‚îÇ‚Ä¢ User : *${m.pushName}*
‚îÉ‚òÖ‚îÇ‚Ä¢ Prefix : [${prefix}]
‚îÉ‚òÖ‚îÇ‚Ä¢ Version : *1.0.0*
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑

‚ï≠‚îÅ‚îÅ„Äî *${selectedMenu.title}* „Äï‚îÅ‚îÅ‚îà‚ä∑
${selectedMenu.content}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *${caption}*`;

      await Matrix.sendMessage(m.from, {
        image: { url: menuImage },
        caption: response,
        contextInfo: {
          mentionedJid: [m.sender],
          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
            newsletterJid: config.NEWSLETTER_JID || '120363315182578784@newsletter',
            newsletterName: config.NEWSLETTER_NAME || "SARKAR-MD",
            serverMessageId: 143
          }
        }
      }, { quoted: receivedMsg });
    };

    // Add temporary listener
    const listener = (event) => handleMenuResponse(event);
    Matrix.ev.on('messages.upsert', listener);

    // Remove listener after 2 minutes
    setTimeout(() => {
      Matrix.ev.off('messages.upsert', listener);
    }, 120000);

  } catch (error) {
    console.error('Menu Error:', error);
    await Matrix.sendMessage(m.from, { 
      text: '‚ùå An error occurred while processing your request' 
    }, { quoted: m });
  }
};

export default menu;
