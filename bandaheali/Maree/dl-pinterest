import axios from "axios";
import config from "../../config.cjs";

const pinterest = async (m, sock) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix)
    ? m.body.slice(prefix.length).split(" ")[0].toLowerCase()
    : "";
  const text = m.body.slice(prefix.length + cmd.length).trim();

  if (cmd === "pinterest" || cmd === "pin") {
    // ‚úÖ Only works if the message is a reply
    if (!m.message.extendedTextMessage?.contextInfo?.quotedMessage) {
      return sock.sendMessage(m.from, {
        text: "*‚ùå Please reply to a message with a Pinterest URL.*\n\nüìå *Usage:* Reply to a message with `.pinterest`",
      }, { quoted: m });
    }

    if (!text) {
      return sock.sendMessage(m.from, {
        text: "*‚ùå Please provide a Pinterest link.*\n\nüìå *Example:* .pinterest https://pin.it/example",
      }, { quoted: m });
    }

    const api = `https://api.paxsenix.biz.id/dl/pinterest?url=${encodeURIComponent(text)}`;

    await sock.sendMessage(m.from, {
      text: "üîÑ *Fetching Pinterest media...*",
    }, { quoted: m });

    try {
      const response = await axios.get(api);
      const { ok, title, description, media_urls, user, is_video } = response.data;

      if (!ok || !media_urls.length) {
        return sock.sendMessage(m.from, {
          text: "*‚ùå Failed to retrieve the media. The API may be down or the link is invalid.*",
        }, { quoted: m });
      }

      const caption = `üìå *Pinterest Media Found!*\n\nüìù *Title:* ${title || "N/A"}\nüìÑ *Description:* ${description || "N/A"}\nüë§ *User:* ${user?.full_name || "N/A"} (@${user?.username || "N/A"})\nüîó *Profile:* ${user?.profile_url || "N/A"}\n\n> *Powered By Sarkar-MD*`;

      // ‚úÖ Check if it's a video or image
      const media = media_urls[0];

      if (is_video) {
        await sock.sendMessage(m.from, {
          video: { url: media.url },
          caption,
        }, { quoted: m });
      } else {
        await sock.sendMessage(m.from, {
          image: { url: media.url },
          caption,
        }, { quoted: m });
      }

    } catch (error) {
      console.error(error);
      return sock.sendMessage(m.from, {
        text: "*‚ùå An error occurred while processing your request. Please try again later.*",
      }, { quoted: m });
    }
  }
};

export default pinterest;
